import numpy as np


class Valve:
    def __init__(self, timeline, dt):
        self.r0 = 0  # Startposition
        self.v0 = 10  # Geschwindigkeit [s]
        self.sp = 100  # Sollwert
        self.dt = dt * self.v0
        self.r = np.zeros_like(timeline)  # SimLine Ventilstellung
        self.r[0] = self.r0  # Startposition zuweisen
        self.v = np.zeros_like(timeline)  # SimLine Volumenstrom
        self.epsilon = self.v0 * dt  # Simulationstolleranz
        self.flowrate_table = (0, 1.1094805505161531, 2.2024348458278773, 3.295389141139605, 4.388343436451333, 5.4812977317630605, 6.574252027074785, 7.667206322386512, 8.76016061769824, 9.853114913009968, 10.946069208321695, 12.039023503633423, 13.131977798945151, 14.224932094256872, 15.3178863895686, 16.410840684880327, 17.503794980192055, 18.596749275503782, 19.68970357081551, 20.782657866127238, 21.875612161438966, 22.968566456750693, 24.061520752062414, 25.15447504737414, 26.24742934268587, 27.340383637997597, 28.433337933309325, 29.526292228621053, 30.61924652393278, 31.712200819244508, 32.805155114556236, 33.898109409867956, 34.991063705179684, 36.08401800049141, 37.17697229580314, 38.26992659111486, 39.36288088642659, 40.455835181738315, 41.54878947705004, 42.64174377236177, 43.7346980676735, 44.827652362985226, 45.920606658296954, 47.01356095360868, 48.10651524892041, 49.19946954423214, 50.292423839543865, 51.38537813485559, 52.47833243016732, 53.546446855131045, 54.664241020790776, 55.757195316102504, 56.88326943854489, 57.929855975873686, 59.05697598759388, 60.1290124973494, 61.22196679266113, 62.314921087972856, 63.40787538328458, 64.50082967859632, 65.59378397390805, 66.66308124984073, 67.68033308313952, 68.67392789705926, 69.66752271097903, 70.64019973934256, 71.57627064298276, 72.5489476713463, 73.54254248526604, 74.53613729918581, 75.52973211310555, 76.52332692702532, 77.51692174094507, 78.48959876930863, 79.40475188739256, 80.31990500547656, 81.27166424828391, 82.18681736636788, 83.08105269889566, 83.97528803142345, 84.85198933782323, 85.68193324121503, 86.579552333171, 87.55222936153456, 88.5458241754543, 89.51850120381786, 90.47836608852819, 91.52660861721355, 92.61956291252528, 93.71251720783701, 94.79127729152131, 95.89842579846047, 96.9913800937722, 98.03962262245753, 99.12760894369967, 100)
        self.position_table = (0, 1.0432826835760807, 1.6175750586602646, 2.327464244528187, 2.7342546768794733, 2.76615980882859, 2.76615980882859, 2.76615980882859, 2.8299700727268373, 3.013424581434265, 3.2527130710526677, 3.5797406735311625, 3.691408635353085, 3.9785548228951626, 4.1620093316026185, 4.337487557322774, 4.504989500055643, 4.680467725775813, 4.903803649419643, 5.135115856050774, 5.358451779694619, 5.597740269313022, 5.8370287589314245, 6.076317248549827, 6.3235820211555165, 6.546917944799347, 6.8181115663668805, 7.1052577539089725, 7.384427658463778, 7.66359756301857, 7.9427674675733755, 8.221937372128181, 8.4931309936957, 8.788253464225079, 9.131233632678104, 9.577905479965807, 10.040529893228054, 10.503154306490288, 11.005660134688938, 11.571976226785807, 12.154244884857263, 12.728537259941433, 13.326758483987433, 14.084505367779045, 14.83427596858337, 15.599999135362268, 16.357746019153893, 17.091564053983646, 17.873239786737102, 18.82972905496176, 20.010883627328155, 21.103634396585534, 22.200373307336548, 23.285413669706244, 24.599345366852987, 26.017024716750072, 27.60031688972518, 29.247419326598518, 30.89053362197822, 32.729066850546275, 34.55962379612707, 36.566608524926494, 38.62513523474374, 40.625587007953584, 42.599717047305404, 44.529977530227185, 46.48794510142058, 48.42120718557179, 50.382176357994595, 52.38262813120444, 54.361145126199276, 56.330888209908096, 58.41469214033502, 60.36919632549445, 62.302022279552496, 64.25742437960963, 66.17844916644088, 68.2049148169724, 70.1303009047353, 72.13855171019937, 74.13418643407573, 76.14186378128582, 78.00475801037075, 79.9370965249129, 81.91122656426474, 83.88789642004144, 85.82439099782434, 87.55005982212239, 89.3726404847159, 91.13938716639845, 92.80320181524513, 94.34732224257218, 95.82146527993186, 97.55072343157418, 99.05983617276758, 100)
        self.min_flowrate = 0
        self.max_flowrate = 70
        self.v[0] = self.volumenstrom(self.r0)
        self.r_now = self.r0
        self.v_now = self.v[0]

    def update(self, now):
        prev = now-1

        # Ventil Charakteristik öffnen / schließen
        if abs(self.r[prev] - self.sp) < self.epsilon:
            self.r[now] = self.r[prev]
        elif self.r[prev] < self.sp:
            self.r[now] = self.r[prev] + self.dt
        elif self.r[prev] > self.sp:
            self.r[now] = self.r[prev] - self.dt

        self.v[now] = self.volumenstrom(self.r[now])
        self.r_now = self.r[now]
        self.v_now = self.v[now]

    def volumenstrom(self, position):
        ausgang = np.interp(position, self.flowrate_table, self.position_table)
        v = np.interp(ausgang, (0, 100), (self.min_flowrate, self.max_flowrate))
        return v

    def setpoint(self, sp):
        if sp <= 0:
            self.sp = 0
        elif sp >= 100:
            self.sp = 100
        else:
            self.sp = sp
